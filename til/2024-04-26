# TIL Template

## 날짜: 2024-04-26

### 스크럼
- 학습 목표 1 : https://www.notion.so/goorm/24-04-26-2214a1322d0b40a7bafb6798a8456d04?pvs=4

### 새로 배운 내용
#### 주제 1: 주제에 대한 설명
- 상세 내용 1 : 댓글 수정 기능은 dom 트리 수정으로 안 되고, fetch 사용해야 한다.
- 상세 내용 2 : 쿠키와 세션 말고, 왜 jwt를 사용해야 하는가

#### 주제 2: 주제에 대한 설명
- 상세 내용 1 : dom 트리 수정은 결국 페이지를 다시 랜더링하는 과정에서 원복된다. fetch로 뿌리부터 바꿔야 한다.
- 상세 내용 2 : 
               링크와 별개로, 결론만 애기하자면 쿠키는 보안성이 너무 떨어지고 세션은 stateful해서 http에 맞지 않는다.
                jwt는 무방비한 쿠키보다 보안이 준비되있다. 시그니처를 통해 변조를 막고, 리프래쉬 토큰을 통해 탈취를 어느 정도 막을 수 있다.
                jwt는 쿠키와 비슷하게 사용자의 로컬에 저장되는 토큰이므로 stateless하다.
                다만 여러 구조의 추가로 인해 네트워크 대역폭면에서 손해를 보므로, 이점에 있어서 쿠키가 활용될 여지가 있다.              

### 오늘의 도전 과제와 해결 방법
- 도전 과제 1: 구현할 기능을 적절한 단위로 나누어서 함수로 구현
- 도전 과제 2: 알지 못하는 용어를 먼저 정리하고, 주제와 관련된 페이지를 5개 정도 읽음. 
              그 중에서 순서과 괜찮은 페이지 하나를 중심으로 다른 페이지의 지식들을 더함.

### 오늘의 회고
결론적으로 2주차 과제 2-1을 오늘 모두 구현하게 된 것이긴 하다.
댓글 수정 기능이 fetch로 구현해야 하므로, 그렇게 된 것이다. 다만 그래도 얻은 것이 있긴 하다.
댓글 수정 기능을 도대체 js로 어떻게 구현해야 할지 감도 못 잡아서 이틀 동안 손도 대디 못 하였다.
다만 구현해야 할 기능을 명확히 정의하고, 적절히 함수로 나누면 DOM을 통해 수정하는 기능을 구현할 수 있기는 하였다.
적어도 다음번에는 어려운 문제 앞에서 "나눠서 정복한다"는 개념을 잊지는 않을 것 같다.

딥 다이브는 여러모로 재밌기도 하고, 정말로 유익하다는 생각이 든다.
stateful과 stateless가 대학교 중간고사에 나왔다는 점에서 더욱 동의하게 되었다. 

### 참고 자료 및 링크
- [쿠키와 세션 말고, 왜 jwt를 인증 수단으로 사용해야 하는가 딥 다이브](https://goorm.notion.site/JWT-JWT-f9e2b2b1215b4865b6be4ddd18c779bf?pvs=4)
