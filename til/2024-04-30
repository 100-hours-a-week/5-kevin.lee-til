# TIL 

## 날짜: 2024-04-30

### 스크럼
- 학습 목표 1 : sign up 페이지 마무리
- 학습 목표 2 : 동적 페이지 구성(폐기)


### 새로 배운 내용
#### 주제 1: 주제에 대한 설명
- 상세 내용 1 : js에서 비동기 함수의 진행 방식 이해

#### 주제 2: 주제에 대한 설명
- 상세 내용 1 : js에서의 비동기 진행 방식 이해

fetch(url, 옵션)

fetch함수는 비동기 함수로, url에 작성된 rsc를 가져오는 함수이다. 
비동기가 진행중일 땐느 Promise()객체를 반환하며, 비동기가 완료된 이후 Resolve()객체를 반환한다.
Resolve()객체가 반환되었을 때는 본인이 작성한 리턴값을 반환값으로 사용할 수 있게 된다. 

또한 async 함수 또한 위와 동일하게 Promise기반으로 작성되었으며, 
위와 동일하게 진행 중일 경우 Promise 객체, 완료되었을 경우 Resolve 객체를 반환한다.

await과 async는 동기와 비동기를 수행할 수 있게하는 키워드이다.
다만 await을 사용하기 위해서는 async함수 안에 있어야 하고, 반대도 마찬가지다.
주의할 점은 한 번 async 함수가 내부 함수에 포함될 경우, 포함한 모든 함수는 async로 하는게 맞을 것이다.
그래야 내부에 포함된 async함수에 await을 붙일 수 있고, 그래야지 함수의 흐름을 내가 설정할 수 있기 때문이다.


### 오늘의 도전 과제와 해결 방법
- 도전 과제 1: 비동기 이해
거의 4시간 내내 검색하고 시험해보았다. 이거 왜에 다른 방법은 없었다.

### 오늘의 회고
비동기에 대한 이해는 확실히 했다. 다만 너무 고생했다. 정말.
바꾼 코드는 그냥 async await을 붙이면 되는 것이었지만 Resolve 객체가 반환되는데
반환값을 저 객체와 상관없이 사용할 수 있다는 것이 기묘한 점이었다.

### 참고 자료 및 링크
- [0430 정리](https://www.notion.so/0430-d0f4f939431e46d4a54ed25ca895f608?pvs=4)
